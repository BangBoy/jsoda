
* TODOs
** TODO Externalize query's pagination key to string and re-internalize it later.
** TODO Support Atomic Counters in DynamoDB and emulate in SimpleDB
** TODO Support updateItem in DynamoDB and emulate in SimpleDB.  setAction(AttributeAction)
** TODO MemCache integration
** TODO Add JSON-Dao to support getting and putting data in JSON.  Add toJson and fromJson util methods in Jsoda.
** TODO Custom marshaller beside JSON of field to marshal/de-marshal to string.  Low priority.
** TODO Support batchGetItem in DynamoDB and emulate for SimpleDB.  Is it needed?  Low priority.
** TODO Index table for DynamoDB, for secondary index and query.  Low priority.
** TODO Support multi-value attribute field.
** TODO Support INTERSECTION operation for multi-value attribute.

* TODOs for 0.10
** DONE Automatically partition a large batch set of batchPut into 25 items for SimpleDB.
** DONE Add Jsoda.getDbEndpoint().
** DONE Support storing of Enum
** DONE Add global table prefix to the Jsoda object to add prefix to all tables managed by the Jsoda object.
** DONE Support S3 fields
*** DONE Add @S3Field to annotate a field to store it at S3.
*** DONE Add @S3Field.AS_JSON for storing field as JSON.
*** DONE Add @S3Field.AS_OBJECT for storing field as Serializable.
*** DONE Allows compressing @S3Field with gzip.
*** DONE Add @S3Field.keyPrefix to define per field S3 key prefix.
*** DONE Add global S3KeyPrefix at the Jsoda object to add key prefix to all S3 keys managed by the Jsoda object.
*** DONE Add auto-building of S3 key path on field.
** DONE Add FnUtil for functional iteration.
** DONE Add IOUtil for io-related functions.
** DONE Refactor ReflectUtil and BaseXUtil to the wwutil.sys package.
** CANCELED Support encoding of BigDecimal field type.
     Unpractical to set a max padding length for arbitrary digits.
** CANCELED Support encoding of BigInteger field type.
     Unpractical to set a max padding length for arbitrary digits.
** CANCELED Support encoding of Calendar field type.
     Not useful.


* TODOs for 0.9
** DONE Add samples
** DONE Make Serializable optional.  Revamp CachePolicy and Serializable class for caching.
** DONE Expose the dump method via Jsoda to aid debugging.
** DONE Support varargs and array in batchPut()
** DONE Support varargs and array in batchDelete()
** DONE Extendable annotation handling framework
** DONE Move data generation, cleansing, and data validation to annotation handling framework.
** DONE Data cleansing: Remove char (-), remove all digits, trim, touppoer, tolower, MaxValue, MinValue, AbsValue, Ceil/floor.
** DONE Add field validation: Required, MaxSize, MinSizexb, StartsWith, EndsWith, Contains, NotContains, RegexMatch, OneOf, MaskMatch, EmailMatch, 
** DONE Refactor BuiltinFunc and ReflectUtil to wwutil.model
** DONE Add gh-pages
** DONE Publish javadoc
** DONE Add README.md for about and tutorial.
** DONE Support findBy a field

* TODOs for 0.8
** DONE Refactor and migrate Jsoda into its own package
** DONE Add makeCacheKey in Jsoda and call it from other places instead of building cache keys all over the place
** DONE Add caching id/rangekey to CacheByName
** DONE Combine Dao.get(arg1) and Dao.get(arg1, arg2)
** DONE Support get by id/rangekey
** DONE Support DynamoDB delete
** DONE Support DynamoDB batch delete
** DONE Replace Column annotation with AttrName annotation
** DONE Support Long/Integer type Id
** DONE Force registration of model class with dbtype, to override dbtype annotation.
** DONE Dynamic registration at the first use of an object via its class.
** DONE Refactor utest to test both SimpleDB and DynamoDB at one place.
** DONE Add more vigorous unit tests.
** DONE Add dummy MemCacheable as the default cache service.
** DONE Refactor object caching service out of Jsoda
** DONE Refactor and clean up the Jsoda class.
** DONE Support delete by id/rangekey, int/long/Integer/Long
** DONE Unit test delete in SimpleDB and DynamoDB.
** DONE Support batchDelete on id/rangekey, int/long/Integer/Long
** DONE Refactor query construction.  Pass Query object to DbService implementation class to generate native query.
   Move SimpleDB query generation from Query to SimpleDBMgr.
** DONE Support mixing of Select Id, other_fields for SimpleDB query.
   1. Support standalone Select Id => Select itemName() as before.
   2. Support Select Id, other1, other2 => Select other1, other2.  Fill in Id in post query processing.
** DONE Fill in Id/RangeKey in post query processing for DynamoDB when only other fields are selected.
** DONE Support select count(*) in Query, for SimpleDB.
** DONE Support select count(*) in Query, for DynamoDB.
** DONE Add unit test for select count(*) for different queries.
** DONE Add query support for DynamoDB.
** DONE Support scan in Query.  For DynamoDB, if query has a filter on Id AND a filter on ARangeKey, do query.  Otherwise, do scan.
** DONE Support building filter conditions in DynamoDB
** DONE Support condition comparison: EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
** DONE Add DSL methods to Query for comparison: EQ, NE, IN, LE, LT, GE, GT, BETWEEN, NOT_NULL, NULL, CONTAINS, NOT_CONTAINS, BEGINS_WITH
** DONE For DynamoDB, filter's field must be the ARangeKey field
** DONE Support multi-operands for some of the comparison operator, like IN.
** DONE Add id and rangekey attributes to AttrFieldMap in Jsoda.
** DONE Support withConsistentRead in Query, for both SimpleDB and DynamoDB.
** DONE Support order by.
** DONE For DynamoDB, order by field must be the RangeKey field.  Asc/Desc change the scan direction.
** DONE Add test for PrePersist and PostLoad
** DONE Add test for inherited model class
** DONE Migrate all annotations out of javax.persistence to remove dependency on ebj3-persistence.jar
** DONE Add PreValidation annotation.
** DONE Formalize order of operations in storing object: PrePersist, built-in basic value generators, built-in composite generators, PreValidation, built-in validation.
** DONE Strigify/de-strigify each supported data type in DataUtil.
** DONE Validate the list of supported field data types.
** DONE Support encoding of additional primitives data type like boolean, char, short.
** DONE Encode any other field object type other than in JSON
** DONE Support Set<ParamType> data type for field.  Use Multi-Value for DynamoDB and JSON for SimpleDB.
** DONE Map Set<Integer>, Set<Long>, Set<Float>, Set<Double>, and Set<String> data type to DynamoDB Multi-Value.
** DONE Put different db objects into different namespaces of a cache, in case the same model is registered in more than one db.
** DONE Support and test putting null value on field, not saving the AttributeValue.  Check with IS NULL and IS NOT NULL queries.
** DONE Integrate Apache Commons Logging
** DONE Iterator for query result.  Add flag to disable caching objects in list result.
   Query.hasNext(), Query.reset() to reset.
** DONE Support auto-increment version field for optimistic locking.  Increment the version field in pre-store stage.  PutIf(..., "version", expected_old_version).
** DONE Add field value generators: DefaultGUID, DefaultComposite, and ModifiedTime.
** DONE Id annotation has two parts @Id(HashKey), @Id(RangeKey).
** DONE Combine the semantic of Id/RangeKey in DynamoDB and SimpleDB.  Id is not unique by itself in the pair in DynamoDB.
** DONE Emulate composite key in SimpleDB.  Revamp all the querying mechanism in SimpleDB.
